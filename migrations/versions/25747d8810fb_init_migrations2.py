"""init migrations2

Revision ID: 25747d8810fb
Revises: ad46fbcc85f1
Create Date: 2025-10-28 03:26:09.908364

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '25747d8810fb'
down_revision: Union[str, None] = 'ad46fbcc85f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_history')
    op.drop_table('articles')
    op.drop_table('tasks')
    op.drop_table('article_history')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('article_history',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('article_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('article_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('change_event', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='article_history_pkey')
    )
    op.create_table('tasks',
    sa.Column('id_task', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('image_names', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('priority', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('assignee_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('assignee_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id_task', name='tasks_pkey'),
    sa.UniqueConstraint('id', name='tasks_id_key')
    )
    op.create_table('articles',
    sa.Column('id_article', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('image_names', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('author_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id_article', name='articles_pkey'),
    sa.UniqueConstraint('id', name='articles_id_key')
    )
    op.create_table('task_history',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id_task', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('change_event', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='task_history_pkey')
    )
    # ### end Alembic commands ###
